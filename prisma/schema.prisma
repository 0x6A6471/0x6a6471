// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            String     @id @default(cuid())
  name          String?    @db.VarChar(255)
  email         String?
  emailVerified DateTime?  @map(name: "email_verified")
  image         String?
  createdAt     DateTime   @default(now()) @map(name: "created_at")
  updatedAt     DateTime   @default(now()) @map(name: "updated_at")
  Bookmark      Bookmark[]
  Food          Food[]

  @@map(name: "users")
}

model Bookmark {
  id          String   @id @default(cuid())
  title       String   @db.VarChar(255)
  description String   @db.VarChar(255)
  link        String   @db.VarChar(255)
  type        String   @db.VarChar(255)
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @map(name: "user_id")

  @@map(name: "bookmarks")
}

model Food {
  id             String   @id @default(cuid())
  restaurantName String   @map(name: "restaurant_name") @db.VarChar(255)
  jakeRating     Float    @map(name: "jake_rating") @db.Float
  jenRating      Float    @map(name: "jen_rating") @db.Float
  link           String   @db.VarChar(255)
  imageUrl       String   @map(name: "image_url") @db.VarChar(255)
  createdAt      DateTime @default(now()) @map(name: "created_at")
  updatedAt      DateTime @default(now()) @map(name: "updated_at")
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @map(name: "user_id")

  @@map(name: "food")
}

// Next auth
model Account {
  id                 String    @id @default(cuid())
  compoundId         String    @unique @map(name: "compound_id")
  userId             String    @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           String   @id @default(cuid())
  userId       String   @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}
